[{"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\index.tsx":"1","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\configureStore.ts":"2","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\App.tsx":"3","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\rootReducer.ts":"4","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\rootSaga.ts":"5","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\productsSaga.ts":"6","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\productsReducer.ts":"7","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Footer\\index.tsx":"8","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Header\\index.tsx":"9","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\productsAction.ts":"10","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\productsService.ts":"11","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\constants\\types.ts":"12","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Rating\\index.tsx":"13","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductList\\index.tsx":"14","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\index.ts":"15","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductItem\\index.tsx":"16","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\utilsReducer.ts":"17","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\utilsAction.ts":"18","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Loading\\index.tsx":"19","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Message\\index.tsx":"20","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\cartsReducer.ts":"21","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\authsReducer.ts":"22","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\authsSaga.ts":"23","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\cartsSaga.ts":"24","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\cartsAction.ts":"25","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\cartsService.ts":"26","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\carts\\CartList\\index.tsx":"27","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\carts\\CartItem\\index.tsx":"28","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\authsAction.ts":"29","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\authsService.ts":"30","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\helpers\\customLocal.ts":"31","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\SignInPage.tsx":"32","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\FormContainer\\index.tsx":"33","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\SignUpPage.tsx":"34","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\ProfilePage.tsx":"35","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\Homepage.tsx":"36","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\CartPage.tsx":"37","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\ProductDetailPage.tsx":"38","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\ShippingPage.tsx":"39","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\CheckOutSteps\\index.tsx":"40","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\PaymentPage.tsx":"41","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\PlaceOrderPage.tsx":"42","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\ordersReducer.ts":"43","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\ordersAction.ts":"44","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\ordersSaga.ts":"45","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\ordersService.ts":"46","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\OrderPage.tsx":"47","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\adminSaga.ts":"48","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\adminService.ts":"49","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\adminAction.ts":"50","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\UserListPage.tsx":"51","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\helpers\\generateErrorSaga.ts":"52","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\EditUserDetailPage.tsx":"53","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\adminReducer.ts":"54","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\ProductListPage.tsx":"55","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\CreateProductPage.tsx":"56","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\EditProductPage.tsx":"57","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\OrderListPage.tsx":"58","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\SearchBox\\index.tsx":"59","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Paginate\\index.tsx":"60","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductCarousel\\index.tsx":"61","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Meta\\index.tsx":"62"},{"size":361,"mtime":1612633758938,"results":"63","hashOfConfig":"64"},{"size":541,"mtime":1610373030709,"results":"65","hashOfConfig":"64"},{"size":3339,"mtime":1612950454013,"results":"66","hashOfConfig":"64"},{"size":641,"mtime":1612631855947,"results":"67","hashOfConfig":"64"},{"size":422,"mtime":1612618722591,"results":"68","hashOfConfig":"64"},{"size":2703,"mtime":1612951673143,"results":"69","hashOfConfig":"64"},{"size":2509,"mtime":1612951466907,"results":"70","hashOfConfig":"64"},{"size":321,"mtime":1612238753873,"results":"71","hashOfConfig":"64"},{"size":2475,"mtime":1612947005052,"results":"72","hashOfConfig":"64"},{"size":1698,"mtime":1612952534333,"results":"73","hashOfConfig":"64"},{"size":864,"mtime":1612952589119,"results":"74","hashOfConfig":"64"},{"size":15087,"mtime":1612951597542,"results":"75","hashOfConfig":"64"},{"size":652,"mtime":1612949163955,"results":"76","hashOfConfig":"64"},{"size":1095,"mtime":1612949666708,"results":"77","hashOfConfig":"64"},{"size":1110,"mtime":1612801587934,"results":"78","hashOfConfig":"64"},{"size":935,"mtime":1610467965042,"results":"79","hashOfConfig":"64"},{"size":970,"mtime":1612235445406,"results":"80","hashOfConfig":"64"},{"size":713,"mtime":1612503789261,"results":"81","hashOfConfig":"64"},{"size":318,"mtime":1612949177647,"results":"82","hashOfConfig":"64"},{"size":278,"mtime":1612949170975,"results":"83","hashOfConfig":"64"},{"size":2908,"mtime":1612611651803,"results":"84","hashOfConfig":"64"},{"size":1679,"mtime":1612622031979,"results":"85","hashOfConfig":"64"},{"size":4107,"mtime":1612934655709,"results":"86","hashOfConfig":"64"},{"size":1861,"mtime":1612630395668,"results":"87","hashOfConfig":"64"},{"size":1708,"mtime":1612611432136,"results":"88","hashOfConfig":"64"},{"size":572,"mtime":1612611325064,"results":"89","hashOfConfig":"64"},{"size":660,"mtime":1612107139280,"results":"90","hashOfConfig":"64"},{"size":1673,"mtime":1612107315029,"results":"91","hashOfConfig":"64"},{"size":1969,"mtime":1612234146670,"results":"92","hashOfConfig":"64"},{"size":788,"mtime":1612234327762,"results":"93","hashOfConfig":"64"},{"size":313,"mtime":1612192995484,"results":"94","hashOfConfig":"64"},{"size":2933,"mtime":1612237865878,"results":"95","hashOfConfig":"64"},{"size":405,"mtime":1612191872163,"results":"96","hashOfConfig":"64"},{"size":4160,"mtime":1612238466321,"results":"97","hashOfConfig":"64"},{"size":6445,"mtime":1612610496849,"results":"98","hashOfConfig":"64"},{"size":1555,"mtime":1612955577255,"results":"99","hashOfConfig":"64"},{"size":2838,"mtime":1612622429296,"results":"100","hashOfConfig":"64"},{"size":6887,"mtime":1612955455705,"results":"101","hashOfConfig":"64"},{"size":2931,"mtime":1612494915322,"results":"102","hashOfConfig":"64"},{"size":1300,"mtime":1612268362331,"results":"103","hashOfConfig":"64"},{"size":2103,"mtime":1612494923156,"results":"104","hashOfConfig":"64"},{"size":5125,"mtime":1612605791108,"results":"105","hashOfConfig":"64"},{"size":2697,"mtime":1612851734199,"results":"106","hashOfConfig":"64"},{"size":1708,"mtime":1612609856969,"results":"107","hashOfConfig":"64"},{"size":2015,"mtime":1612844753357,"results":"108","hashOfConfig":"64"},{"size":788,"mtime":1612618550111,"results":"109","hashOfConfig":"64"},{"size":7097,"mtime":1612851944902,"results":"110","hashOfConfig":"64"},{"size":4108,"mtime":1612845043287,"results":"111","hashOfConfig":"64"},{"size":1498,"mtime":1612844693404,"results":"112","hashOfConfig":"64"},{"size":3045,"mtime":1612845607092,"results":"113","hashOfConfig":"64"},{"size":3048,"mtime":1612705902214,"results":"114","hashOfConfig":"64"},{"size":349,"mtime":1612630229914,"results":"115","hashOfConfig":"64"},{"size":3823,"mtime":1612950799077,"results":"116","hashOfConfig":"64"},{"size":1749,"mtime":1612851707471,"results":"117","hashOfConfig":"64"},{"size":3917,"mtime":1612951023643,"results":"118","hashOfConfig":"64"},{"size":5917,"mtime":1612802275505,"results":"119","hashOfConfig":"64"},{"size":6644,"mtime":1612950861304,"results":"120","hashOfConfig":"64"},{"size":3115,"mtime":1612850768527,"results":"121","hashOfConfig":"64"},{"size":893,"mtime":1612949156194,"results":"122","hashOfConfig":"64"},{"size":835,"mtime":1612950374004,"results":"123","hashOfConfig":"64"},{"size":1754,"mtime":1612955520547,"results":"124","hashOfConfig":"64"},{"size":531,"mtime":1612955363217,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"e06gms",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"128"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"128"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\index.tsx",[],["274","275"],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\configureStore.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\App.tsx",["276"],"import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport \"./App.scss\";\nimport \"./bootstrap.min.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootReducerI } from \"./stores/rootReducer\";\nimport authsAction from \"./stores/redux/actions/authsAction\";\n\nimport Footer from \"./components/layouts/Footer\";\nimport Header from \"./components/layouts/Header\";\n\nimport Homepage from \"./pages/products/Homepage\";\nimport ProductDetailPage from \"./pages/products/ProductDetailPage\";\nimport ShippingPage from \"./pages/products/ShippingPage\";\nimport PaymentPage from \"./pages/products/PaymentPage\";\nimport CartPage from \"./pages/products/CartPage\";\nimport PlaceOrderPage from \"./pages/products/PlaceOrderPage\";\nimport OrderPage from \"./pages/products/OrderPage\";\n\nimport SignInPage from \"./pages/users/SignInPage\";\nimport SignUpPage from \"./pages/users/SignUpPage\";\nimport ProfilePage from \"./pages/users/ProfilePage\";\n\nimport UserListPage from \"./pages/admins/UserListPage\";\nimport EditUserDetailPage from \"./pages/admins/EditUserDetailPage\";\nimport ProductListPage from \"./pages/admins/ProductListPage\";\nimport CreateProductPage from \"./pages/admins/CreateProductPage\";\nimport EditProductPage from \"./pages/admins/EditProductPage\";\nimport OrderListPage from \"./pages/admins/OrderListPage\";\n\nconst App = (): JSX.Element => {\n\tconst {\n\t\tauthsReducer: { checkAuthentication },\n\t} = useSelector((state: RootReducerI) => state);\n\tconst dispatch = useDispatch();\n\tconst { checkAuthenticationRequest } = authsAction;\n\n\tuseEffect(() => {\n\t\tdispatch(checkAuthenticationRequest());\n\t}, [checkAuthentication]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<main className=\"py-3\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{/* PRODUCT PAGES */}\n\t\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\n\t\t\t\t\t\t<Route exact path=\"/search/:keyword\" component={Homepage} />\n\t\t\t\t\t\t<Route exact path=\"/search/:keyword/page/:pageNumber\" component={Homepage} />\n\t\t\t\t\t\t<Route exact path=\"/page/:pageNumber\" component={Homepage} />\n\t\t\t\t\t\t<Route exact path=\"/product/:id\" component={ProductDetailPage} />\n\t\t\t\t\t\t<Route exact path=\"/cart/:id?\" component={CartPage} />\n\t\t\t\t\t\t<Route exact path=\"/shipping\" component={ShippingPage} />\n\t\t\t\t\t\t<Route exact path=\"/payment\" component={PaymentPage} />\n\t\t\t\t\t\t<Route exact path=\"/placeorder\" component={PlaceOrderPage} />\n\t\t\t\t\t\t<Route exact path=\"/order/:id\" component={OrderPage} />\n\n\t\t\t\t\t\t{/* AUTH & USER PAGES */}\n\t\t\t\t\t\t<Route exact path=\"/login\" component={SignInPage} />\n\t\t\t\t\t\t<Route exact path=\"/register\" component={SignUpPage} />\n\t\t\t\t\t\t<Route exact path=\"/profile\" component={ProfilePage} />\n\n\t\t\t\t\t\t{/* ADMIN PAGES */}\n\t\t\t\t\t\t<Route exact path=\"/admin/users\" component={UserListPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/user/:id\" component={EditUserDetailPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/products\" component={ProductListPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/products/:pageNumber\" component={ProductListPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/create-product\" component={CreateProductPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/product/:id/edit\" component={EditProductPage} />\n\t\t\t\t\t\t<Route exact path=\"/admin/orders\" component={OrderListPage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nexport default App;\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\rootReducer.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\rootSaga.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\productsSaga.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\productsReducer.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Footer\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Header\\index.tsx",["277"],"import React from \"react\";\r\nimport { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport authsAction from \"../../../stores/redux/actions/authsAction\";\r\nimport { RootReducerI } from \"../../../stores/rootReducer\";\r\n\r\nimport SearchBox from \"../../utils/SearchBox\";\r\n\r\nconst Header = (): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { signOutRequest } = authsAction;\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<LinkContainer to=\"/\">\r\n\t\t\t\t\t\t<Navbar.Brand>ProShop</Navbar.Brand>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t\t{checkAuthentication !== undefined && (\r\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t\t<SearchBox />\r\n\t\t\t\t\t\t\t<Nav className=\"ml-auto\">\r\n\t\t\t\t\t\t\t\t<LinkContainer to=\"/cart\">\r\n\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-shopping-cart\"></i> Cart\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t{checkAuthentication === true ? (\r\n\t\t\t\t\t\t\t\t\t<NavDropdown title={userData.name} id=\"username\">\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/profile\">\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={(): any => dispatch(signOutRequest())}>\r\n\t\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\"></i> Sign In\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{checkAuthentication === true && userData.isAdmin && (\r\n\t\t\t\t\t\t\t\t\t<NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/admin/users\">\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Users</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/admin/products\">\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Products</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/admin/orders\">\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Orders</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\productsAction.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\productsService.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\constants\\types.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Rating\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductList\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\index.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductItem\\index.tsx",[],["278","279"],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\utilsReducer.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\utilsAction.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Loading\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Message\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\cartsReducer.ts",["280"],"import * as types from \"../../../constants/types\";\r\n\r\nimport produce from \"immer\";\r\nimport customLocal from \"../../../helpers/customLocal\";\r\nimport { StringifyOptions } from \"querystring\";\r\n\r\ninterface CartItemI {\r\n\t_id?: string;\r\n\tname?: string;\r\n\timage?: string;\r\n\tprice?: number;\r\n\tcountInStock?: number;\r\n\tquantity?: number | string;\r\n\tuser?: string;\r\n}\r\n\r\ntype CartListI = Array<CartItemI>;\r\n\r\ninterface ShippingAddressI {\r\n\taddress?: string;\r\n\tcity?: string;\r\n\tpostalCode?: string;\r\n\tcountry?: string;\r\n}\r\n\r\ninterface InitialStateI {\r\n\tcartList: CartListI;\r\n\tshippingAddress: ShippingAddressI;\r\n\tpaymentMethod: string;\r\n\titemsPrice: number;\r\n\tshippingPrice: number;\r\n\ttaxPrice: number;\r\n\ttotalPrice: number;\r\n}\r\n\r\nconst initialState: InitialStateI = {\r\n\tcartList: [],\r\n\tshippingAddress: customLocal.getFromLocal(\"shippingAddress\") || null,\r\n\tpaymentMethod: customLocal.getFromLocal(\"paymentMethod\") || null,\r\n\titemsPrice: 0,\r\n\tshippingPrice: 0,\r\n\ttaxPrice: 0,\r\n\ttotalPrice: 0,\r\n};\r\n\r\nconst cartsReducer = (state: InitialStateI = initialState, action: any) =>\r\n\tproduce(state, (draft: InitialStateI) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase types.FETCH_CART_LIST_SUCCEEDED: {\r\n\t\t\t\tdraft.cartList = action.cartList;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.ADD_CART_ITEM_SUCCEEDED: {\r\n\t\t\t\tconst newCartItem: CartItemI = action.cartItem;\r\n\t\t\t\tconst cartItemIndex = draft.cartList.findIndex(\r\n\t\t\t\t\t(cartItem: CartItemI): boolean => cartItem._id === newCartItem._id\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (cartItemIndex !== -1) {\r\n\t\t\t\t\tdraft.cartList = draft.cartList.map(\r\n\t\t\t\t\t\t(cartItem: CartItemI): CartItemI => (cartItem._id === newCartItem._id ? newCartItem : cartItem)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdraft.cartList.push(newCartItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.REMOVE_CART_ITEM_SUCCEEDED: {\r\n\t\t\t\tdraft.cartList = draft.cartList.filter(\r\n\t\t\t\t\t(cartItem: CartItemI): boolean => cartItem._id !== action.cartId\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.SAVING_SHIPPING_ADDRESS: {\r\n\t\t\t\tdraft.shippingAddress = action.shippingAddress;\r\n\t\t\t\tcustomLocal.saveToLocal(\"shippingAddress\", action.shippingAddress);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.SAVING_PAYMENT_METHOD: {\r\n\t\t\t\tdraft.paymentMethod = action.paymentMethod;\r\n\t\t\t\tcustomLocal.saveToLocal(\"paymentMethod\", action.paymentMethod);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.SET_PAYMENT_PRICE: {\r\n\t\t\t\tdraft.itemsPrice = action.itemsPrice;\r\n\t\t\t\tdraft.shippingPrice = action.shippingPrice;\r\n\t\t\t\tdraft.taxPrice = action.taxPrice;\r\n\t\t\t\tdraft.totalPrice = action.totalPrice;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.SIGN_OUT_SUCCEEDED: {\r\n\t\t\t\tdraft.cartList = [];\r\n\t\t\t\tdraft.paymentMethod = \"\";\r\n\t\t\t\tdraft.shippingAddress = {};\r\n\t\t\t\tdraft.itemsPrice = 0;\r\n\t\t\t\tdraft.shippingPrice = 0;\r\n\t\t\t\tdraft.taxPrice = 0;\r\n\t\t\t\tdraft.totalPrice = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\nexport default cartsReducer;\r\nexport type { CartItemI, CartListI, ShippingAddressI };\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\authsReducer.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\authsSaga.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\cartsSaga.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\cartsAction.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\cartsService.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\carts\\CartList\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\carts\\CartItem\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\authsAction.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\authsService.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\helpers\\customLocal.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\SignInPage.tsx",["281"],"import React from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport authsAction from \"../../stores/redux/actions/authsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport FormContainer from \"../../components/layouts/FormContainer\";\r\n\r\nconst YupSchema = Yup.object({});\r\n\r\nconst SignInPage = ({ location }: RouteComponentProps): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { signInRequest } = authsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst redirect: string = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n\tif (checkAuthentication === true) return <Redirect to={redirect} />;\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: \"\", password: \"\" }}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\tdispatch(signInRequest(values.email, values.password));\r\n\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\taction.resetForm();\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<FormContainer>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h1>Sign In</h1>\r\n\t\t\t\t\t\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t\t\t\t\t\t<Form onSubmit={props.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"email\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"password\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\tNew Customer?{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</FormContainer>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default SignInPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\FormContainer\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\SignUpPage.tsx",["282"],"import React, { ChangeEvent } from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport authsAction from \"../../stores/redux/actions/authsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport FormContainer from \"../../components/layouts/FormContainer\";\r\n\r\nconst YupSchema = Yup.object({\r\n\tpassword: Yup.string(),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst SignUpPage = ({ location }: RouteComponentProps): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { signUpRequest } = authsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst redirect: string = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n\tif (checkAuthentication === true) return <Redirect to={redirect} />;\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ name: \"\", email: \"\", password: \"\", confirmPassword: \"\", message: \"\" }}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tif (values.password === values.confirmPassword) {\r\n\t\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\t\tdispatch(signUpRequest(values.name, values.email, values.password));\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<FormContainer>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h1>Sign Up</h1>\r\n\t\t\t\t\t\t\t\t\t{props.values.message && <Message variant=\"danger\">{props.values.message}</Message>}\r\n\t\t\t\t\t\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (props.values.password !== props.values.confirmPassword) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"message\", \"Password do not match\");\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"message\", \"\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tprops.handleSubmit(e);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"name\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"email\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"password\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"confirmPassword\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"confirmPassword\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\tHave an Account?{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>Login</Link>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</FormContainer>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\users\\ProfilePage.tsx",["283","284"],"import React, { ChangeEvent, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport authsAction from \"../../stores/redux/actions/authsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\nimport ordersAction from \"../../stores/redux/actions/ordersAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport { OrderInfoI } from \"../../stores/redux/reducers/ordersReducer\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst YupSchema = Yup.object({\r\n\tpassword: Yup.string(),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst ProfilePage = ({ history }: RouteComponentProps): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error, updateStatus },\r\n\t\tordersReducer: { orderUser },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { getUserDataRequest, updateUserDataRequest } = authsAction;\r\n\tconst { getOrderUserRequest } = ordersAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication === false) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t\tif (!userData.name) {\r\n\t\t\t\tdispatch(getUserDataRequest());\r\n\t\t\t}\r\n\t\t}\r\n\t}, [userData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication === true) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(getOrderUserRequest());\r\n\t\t}\r\n\t}, [checkAuthentication]);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{\r\n\t\t\t\tname: userData.name || \"\",\r\n\t\t\t\temail: userData.email || \"\",\r\n\t\t\t\tpassword: \"\",\r\n\t\t\t\tconfirmPassword: \"\",\r\n\t\t\t\tmessage: \"\",\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tif (values.password === values.confirmPassword) {\r\n\t\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tupdateUserDataRequest({\r\n\t\t\t\t\t\t\tname: values.name,\r\n\t\t\t\t\t\t\temail: values.email,\r\n\t\t\t\t\t\t\tpassword: values.password,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t\t\t\t\t\t\t{props.values.message && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{props.values.message}</Message>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t\t\t\t\t\t\t{updateStatus && <Message variant=\"success\">Profile Updated</Message>}\r\n\t\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (props.values.password !== props.values.confirmPassword) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"message\", \"Password do not match\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"message\", \"\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.handleSubmit(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"name\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"email\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"password\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"confirmPassword\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"confirmPassword\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t<Col md={9}>\r\n\t\t\t\t\t\t\t\t\t\t<h2>My Order</h2>\r\n\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>DATE</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>TOTAL</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>PAID</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>DELIVERED</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{orderUser.map((order: OrderInfoI) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={order._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{String(order.createdAt).substring(0, 10)}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{order.totalPrice}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString(order.paidAt).substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-times\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{order.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString(order.deliveredAt).substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-times\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\">Details</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default ProfilePage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\Homepage.tsx",["285"],"import React, { useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport productsAction from \"../../stores/redux/actions/productsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\n\r\nimport ProductList from \"../../components/products/ProductList\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport Message from \"../../components/utils/Message\";\r\nimport ProductCarousel from \"../../components/products/ProductCarousel\";\r\nimport Meta from \"../../components/layouts/Meta\";\r\n\r\nconst Homepage = ({ match }: RouteComponentProps<any>): JSX.Element => {\r\n\tconst keyword: string = match.params.keyword;\r\n\tconst pageNumber: number = Number(match.params.pageNumber) || 1;\r\n\tconst {\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst { fetchProductListRequest } = productsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(fetchProductListRequest(keyword, pageNumber));\r\n\t}, [keyword, pageNumber]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Meta />\r\n\t\t\t{!keyword ? (\r\n\t\t\t\t<ProductCarousel />\r\n\t\t\t) : (\r\n\t\t\t\t<Link to=\"/\" className=\"btn btn-light\">\r\n\t\t\t\t\tGo Back\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<h1>Latest Products</h1>\r\n\t\t\t{loading ? <Loading /> : error ? <Message variant=\"danger\" children={error} /> : <ProductList />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Homepage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\CartPage.tsx",["286","287","288"],"import React, { useEffect } from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport { CartItemI } from \"../../stores/redux/reducers/cartsReducer\";\r\nimport cartsAction from \"../../stores/redux/actions/cartsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport CartList from \"../../components/carts/CartList\";\r\n\r\nconst CartPage = ({ history }: RouteComponentProps): JSX.Element => {\r\n\tconst {\r\n\t\tcartsReducer: { cartList },\r\n\t\tauthsReducer: { checkAuthentication },\r\n\t\tutilsReducer: { loading },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchCartListRequest } = cartsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst checkoutHandler = (): void => history.push(\"/login?redirect=shipping\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cartList.length === 0 && checkAuthentication) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(fetchCartListRequest());\r\n\t\t}\r\n\t}, [checkAuthentication]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\t\t\t<h1>Shopping Cart</h1>\r\n\t\t\t\t\t\t\t\t{cartList.length === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<Message>\r\n\t\t\t\t\t\t\t\t\t\tYour cart is empty <Link to=\"/\">Go Back</Link>\r\n\t\t\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<CartList />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSubTotal (\r\n\t\t\t\t\t\t\t\t\t\t\t\t{cartList.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(acc: number, cartItem: CartItemI): number =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tacc + Number(cartItem.quantity),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t) items\r\n\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t$\r\n\t\t\t\t\t\t\t\t\t\t\t{cartList\r\n\t\t\t\t\t\t\t\t\t\t\t\t.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(acc: number, cartItem: CartItemI): number =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tacc + Number(cartItem.quantity) * Number(cartItem.price),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={cartList.length === 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={checkoutHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProceed To Checkout\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CartPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\ProductDetailPage.tsx",["289"],"import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\r\n\r\nimport { Formik } from \"formik\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport { ReviewI } from \"../../stores/redux/reducers/productsReducer\";\r\nimport productsAction from \"../../stores/redux/actions/productsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\nimport cartsAction from \"../../stores/redux/actions/cartsAction\";\r\n\r\nimport Rating from \"../../components/utils/Rating\";\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport Meta from \"../../components/layouts/Meta\";\r\n\r\nconst ProductDetailPage = ({ match, history }: RouteComponentProps<any>): JSX.Element => {\r\n\tconst productId: string = match.params.id;\r\n\tconst [quantity, setQuantity] = useState<number | string | undefined>(1);\r\n\tconst {\r\n\t\tproductsReducer: {\r\n\t\t\tproductDetail: { image, name, rating, numReviews, price, description, countInStock, reviews },\r\n\t\t\tcreateReviewError,\r\n\t\t},\r\n\t\tutilsReducer: { loading, error },\r\n\t\tauthsReducer: { userData },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst { fetchProductDetailRequest, createReviewProduct } = productsAction;\r\n\tconst { addCartItemRequest } = cartsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst addToCardHandler = (): void => {\r\n\t\thistory.push(\"/cart\");\r\n\t\tdispatch(\r\n\t\t\taddCartItemRequest({ _id: productId, name, image, price, countInStock, quantity, user: userData._id })\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(fetchProductDetailRequest(match.params.id));\r\n\t}, [match.params.id]);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ rating: 0, comment: \"\" }}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tcreateReviewProduct(productId, {\r\n\t\t\t\t\t\tuser: userData.name,\r\n\t\t\t\t\t\trating: Number(values.rating),\r\n\t\t\t\t\t\tcomment: values.comment,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\taction.resetForm();\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link className=\"btn btn-light my-3\" to=\"/\">\r\n\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t<Message variant=\"danger\" children={error} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Meta title={name} />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t\t\t<Image src={image} fluid />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Rating rating={rating} text={`${numReviews} reviews`} />\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>Price: ${price}</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>Description: {description}</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>Price:</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>${price}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>Status:</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t{countInStock > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>Qty</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: \"0.75rem 1.2rem\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: ChangeEvent<HTMLSelectElement>): void =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetQuantity(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{[...Array(countInStock).keys()].map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item: number): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={item + 1} value={item + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={countInStock === 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={addToCardHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd To Cart\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t\t\t<h2>Review</h2>\r\n\t\t\t\t\t\t\t\t\t{reviews?.length === 0 && <Message>No reviews</Message>}\r\n\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t\t{reviews?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t(review: ReviewI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={review._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{review.name}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Rating rating={review.rating} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{String(review.createdAt).substring(0, 10)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{review.comment}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2>Write a Customer Review</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t{createReviewError && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{createReviewError}</Message>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{userData ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form onSubmit={props.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rating\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Rating</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.rating}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"rating\")}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select...</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1 - Poor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2 - Pair</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3 - Good</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4 - Very Good</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5 - Excellent</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"comment\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Comment</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.comment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"comment\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Message>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease <Link to=\"/login\">Sign In</Link> to write a review\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default ProductDetailPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\ShippingPage.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\CheckOutSteps\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\PaymentPage.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\PlaceOrderPage.tsx",["290","291","292","293","294"],"import React, { useEffect } from \"react\";\r\nimport { RouteComponentProps, Redirect, Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport { CartItemI } from \"../../stores/redux/reducers/cartsReducer\";\r\nimport cartsAction from \"../../stores/redux/actions/cartsAction\";\r\nimport ordersAction from \"../../stores/redux/actions/ordersAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport CheckOutSteps from \"../../components/products/CheckOutSteps\";\r\n\r\nconst PlaceOrderPage = ({ history }: RouteComponentProps): JSX.Element => {\r\n\tconst {\r\n\t\tcartsReducer: { shippingAddress, paymentMethod, cartList, itemsPrice, shippingPrice, taxPrice, totalPrice },\r\n\t\tauthsReducer: { checkAuthentication },\r\n\t\tordersReducer: { orderInfo, orderCreatedSuccess },\r\n\t\tutilsReducer: { error, loading },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { savingPaymentMethod, setPaymentPrice, fetchCartListRequest } = cartsAction;\r\n\tconst { addOrderItemRequest } = ordersAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst placeOrderHandler = (): void => {\r\n\t\tdispatch(\r\n\t\t\taddOrderItemRequest({\r\n\t\t\t\torderList: cartList,\r\n\t\t\t\tshippingAddress,\r\n\t\t\t\tpaymentMethod,\r\n\t\t\t\titemsPrice,\r\n\t\t\t\tshippingPrice,\r\n\t\t\t\ttaxPrice,\r\n\t\t\t\ttotalPrice,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (orderCreatedSuccess) {\r\n\t\t\thistory.push(`/order/${orderInfo?._id}`);\r\n\t\t}\r\n\t}, [orderCreatedSuccess, history]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(fetchCartListRequest());\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Calculate prices\r\n\t\tconst tempCartItemsPrice: number = cartList.reduce(\r\n\t\t\t(acc: number, item: CartItemI): number => acc + (item.price as number) * (item.quantity as number),\r\n\t\t\t0\r\n\t\t);\r\n\t\tconst tempShippingPrice: number = tempCartItemsPrice > 100 ? 0 : 100;\r\n\t\tconst tempTaxPrice: number = 0.15 * tempCartItemsPrice;\r\n\t\tconst tempTotalPrice: number = tempCartItemsPrice + tempShippingPrice + tempTaxPrice;\r\n\r\n\t\tdispatch(setPaymentPrice(tempCartItemsPrice, tempShippingPrice, tempTaxPrice, tempTotalPrice));\r\n\t}, [cartList]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (!shippingAddress) {\r\n\t\thistory.push(\"/shipping\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CheckOutSteps step1 step2 step3 step4 />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Address:</strong>\r\n\t\t\t\t\t\t\t\t{shippingAddress.address}, {shippingAddress.city}, {shippingAddress.postalCode},{\" \"}\r\n\t\t\t\t\t\t\t\t{shippingAddress.country}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\t\t\t\t\t\t\t<strong>Method: </strong> {paymentMethod}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t{cartList.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Message>Card is empty</Message>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t{cartList.map(\r\n\t\t\t\t\t\t\t\t\t\t(cartItem: CartItemI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={cartItem._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image src={cartItem.image} alt={cartItem.name} fluid rounded />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${cartItem._id}`}>{cartItem.name}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cartItem.quantity} x {cartItem.price} = $\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(cartItem.quantity as number) * (cartItem.price as number)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Items</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${itemsPrice.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Shipping</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${shippingPrice.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Tax</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${taxPrice.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Total</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${totalPrice.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>{error && <Message variant=\"danger\">{error}</Message>}</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\r\n\t\t\t\t\t\t\t\t\tdisabled={cartList.length === 0}\r\n\t\t\t\t\t\t\t\t\tonClick={placeOrderHandler}>\r\n\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PlaceOrderPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\ordersReducer.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\ordersAction.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\ordersSaga.ts",["295"],"import { AxiosResponse } from \"axios\";\r\nimport { takeLatest, put, call } from \"redux-saga/effects\";\r\n\r\nimport * as types from \"../../constants/types\";\r\nimport ordersAction from \"../redux/actions/ordersAction\";\r\nimport utilsAction from \"../redux/actions/utilsAction\";\r\n\r\nimport OrdersService from \"../../services/ordersService\";\r\n\r\nimport generateErrorSaga from \"../../helpers/generateErrorSaga\";\r\n\r\nfunction* getOrderDetail({ orderId }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(OrdersService.getOrderDetail, { orderId });\r\n\t\tyield put(ordersAction.getOrderDetailSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* getOrderUser() {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(OrdersService.getOrderUser);\r\n\t\tyield put(ordersAction.getOrderUserSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* addOrderItem({ orderInfo }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(OrdersService.addOrderItem, { orderInfo });\r\n\t\tyield put(ordersAction.addOrderItemSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t\tyield put(ordersAction.addOrderItemFailed());\r\n\t}\r\n}\r\n\r\nfunction* orderPay({ orderId, paymentResult }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(OrdersService.orderPay, { orderId, paymentResult });\r\n\t\tyield put(ordersAction.orderPaySucceeded());\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t\tyield put(ordersAction.orderPayFailed());\r\n\t}\r\n}\r\n\r\nexport default function* ordersSaga() {\r\n\tyield takeLatest(types.GET_ORDER_DETAIL_REQUEST, getOrderDetail);\r\n\tyield takeLatest(types.GET_ORDER_USER_REQUEST, getOrderUser);\r\n\tyield takeLatest(types.ADD_ORDER_ITEM_REQUEST, addOrderItem);\r\n\tyield takeLatest(types.ORDER_PAY_REQUEST, orderPay);\r\n}\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\ordersService.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\products\\OrderPage.tsx",["296"],"import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Redirect, Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport axios, { AxiosResponse } from \"axios\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport { CartItemI } from \"../../stores/redux/reducers/cartsReducer\";\r\nimport ordersAction from \"../../stores/redux/actions/ordersAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\n\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport Message from \"../../components/utils/Message\";\r\n\r\nconst OrderPage = ({ match }: RouteComponentProps | any): JSX.Element => {\r\n\tconst orderId: string = match.params.id;\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tordersReducer: { orderInfo, orderPaySuccess },\r\n\t\tutilsReducer: { error, loading },\r\n\t\tadminReducer: { orderDeliverSuccess },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst [sdkReady, setSdkReady] = useState<boolean>(false);\r\n\tconst dispatch = useDispatch();\r\n\tconst { getOrderDetailRequest, orderPayRequest, orderPayRest } = ordersAction;\r\n\tconst { orderDeliverRequest, orderDeliverRest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst addPayPalScript = async () => {\r\n\t\tconst { data: clientId }: AxiosResponse = await axios.get(\"/api/config/paypal\");\r\n\t\tconst script: HTMLScriptElement = document.createElement(\"script\");\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n\t\tscript.async = true;\r\n\t\tscript.onload = (): void => setSdkReady(true);\r\n\t\tdocument.body.appendChild(script);\r\n\t};\r\n\r\n\tconst successOrderPayHandler = (paymentResult: any): void => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(orderPayRequest(orderId, paymentResult));\r\n\t};\r\n\r\n\tconst successOrderDeliverHandler = (): void => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(orderDeliverRequest(orderId));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tcheckAuthentication &&\r\n\t\t\t(!orderInfo || orderInfo._id !== orderId || orderPaySuccess || orderDeliverSuccess)\r\n\t\t) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(getOrderDetailRequest(orderId));\r\n\t\t\tdispatch(orderPayRest());\r\n\t\t\tdispatch(orderDeliverRest());\r\n\t\t} else if (!orderInfo?.isPaid) {\r\n\t\t\tif (!(window as any).paypal) {\r\n\t\t\t\taddPayPalScript();\r\n\t\t\t} else {\r\n\t\t\t\tsetSdkReady(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [checkAuthentication, orderInfo, orderId, orderPaySuccess, orderDeliverSuccess]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading || checkAuthentication === undefined ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h1>Order {orderInfo?._id}</h1>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Name: </strong> {orderInfo?.user?.name}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Email: </strong>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<a href={`mailto:${orderInfo?.user?.email}`}>{orderInfo?.user?.email}</a>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Address:</strong>\r\n\t\t\t\t\t\t\t\t\t\t{orderInfo?.shippingAddress?.address}, {orderInfo?.shippingAddress?.city},{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{orderInfo?.shippingAddress?.postalCode}, {orderInfo?.shippingAddress?.country}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{orderInfo?.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"success\">Delivered on {orderInfo?.deliveredAt}</Message>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">Not Delivered</Message>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t{orderInfo?.totalPrice?.toFixed(2)}\r\n\r\n\t\t\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Method: </strong> {orderInfo?.paymentMethod}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{orderInfo?.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"success\">Paid on {orderInfo?.paidAt}</Message>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">Not Paid</Message>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t\t\t{orderInfo?.orderList?.length === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<Message>Card is empty</Message>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t\t\t{orderInfo?.orderList?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(cartItem: CartItemI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={cartItem._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={cartItem.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={cartItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${cartItem._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cartItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cartItem.quantity} x {cartItem.price} = $\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(cartItem.quantity as number) *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cartItem.price as number)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Items</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>${orderInfo?.itemsPrice?.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Shipping</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>${orderInfo?.shippingPrice?.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Tax</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>${orderInfo?.taxPrice?.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Total</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>${orderInfo?.totalPrice?.toFixed(2)}</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t{!orderInfo?.isPaid && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t{loading && <Loading />}\r\n\t\t\t\t\t\t\t\t\t\t\t{!sdkReady ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<PayPalButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tamount={orderInfo?.totalPrice?.toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSuccess={successOrderPayHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{userData.isAdmin && orderInfo?.isPaid && !orderInfo?.isDelivered && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={successOrderDeliverHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tMark As Delivered\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OrderPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\saga\\adminSaga.ts",["297"],"import { AxiosResponse } from \"axios\";\r\nimport { takeLatest, put, call } from \"redux-saga/effects\";\r\n\r\nimport * as types from \"../../constants/types\";\r\nimport generateErrorSaga from \"../../helpers/generateErrorSaga\";\r\n\r\nimport AdminService from \"../../services/adminService\";\r\n\r\nimport adminAction from \"../redux/actions/adminAction\";\r\nimport utilsAction from \"../redux/actions/utilsAction\";\r\n\r\nfunction* fetchUserList() {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.fetchUserList);\r\n\t\tyield put(adminAction.fetchUserListSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t\tyield put(utilsAction.clearError());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* getUserDetail({ userId }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.getUserDetail, { userId });\r\n\t\tyield put(adminAction.getUserDetailSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t\tyield put(utilsAction.clearError());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* updateUser({ userId, userForm, history }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.updateUser, { userId, userForm });\r\n\t\tyield put(adminAction.updateUserSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t\tyield put(utilsAction.clearError());\r\n\t\tyield history.push(\"/admin/users\");\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* deleteUser({ userId }: any) {\r\n\ttry {\r\n\t\tyield put(adminAction.deleteUserSucceeded(userId));\r\n\t\tyield call(AdminService.deleteUser, { userId });\r\n\t\tyield put(utilsAction.clearError());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* createProductItem({ productForm, history }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.createProductItem, { productForm });\r\n\t\tyield put(adminAction.createProductItemSucceeded(data));\r\n\t\tyield put(utilsAction.clearError());\r\n\t\tyield history.push(\"/admin/products\");\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* updateProduct({ productId, productForm, history }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.updateProduct, { productId, productForm });\r\n\t\tyield put(adminAction.updateProductItemSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t\tyield put(utilsAction.clearError());\r\n\t\tyield history.push(\"/admin/products\");\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* deleteProduct({ productId }: any) {\r\n\ttry {\r\n\t\tyield put(adminAction.deleteProductSucceeded(productId));\r\n\t\tyield call(AdminService.deleteProduct, { productId });\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* fetchOrderList() {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.fetchOrderList);\r\n\t\tyield put(adminAction.fetchOrderListSucceeded(data));\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t\tyield put(utilsAction.clearError());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t}\r\n}\r\n\r\nfunction* orderDeliver({ orderId }: any) {\r\n\ttry {\r\n\t\tconst { data }: AxiosResponse = yield call(AdminService.orderDeliver, { orderId });\r\n\t\tyield put(adminAction.orderDeliverSucceeded());\r\n\t\tyield put(utilsAction.loadedUI());\r\n\t} catch (error) {\r\n\t\tyield call(generateErrorSaga, { error });\r\n\t\tyield put(adminAction.orderDeliverFailed());\r\n\t}\r\n}\r\n\r\nexport default function* adminSaga() {\r\n\tyield takeLatest(types.FETCH_USER_LIST_REQUEST, fetchUserList);\r\n\tyield takeLatest(types.GET_USER_DETAIL_REQUEST, getUserDetail);\r\n\tyield takeLatest(types.UPDATE_USER_REQUEST, updateUser);\r\n\tyield takeLatest(types.DELETE_USER_REQUEST, deleteUser);\r\n\tyield takeLatest(types.CREATE_PRODUCT_ITEM_REQUEST, createProductItem);\r\n\tyield takeLatest(types.UPDATE_PRODUCT_ITEM_REQUEST, updateProduct);\r\n\tyield takeLatest(types.DELETE_PRODUCT_REQUEST, deleteProduct);\r\n\tyield takeLatest(types.FETCH_ORDER_LIST_REQUEST, fetchOrderList);\r\n\tyield takeLatest(types.ORDER_DELIVER_REQUEST, orderDeliver);\r\n}\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\services\\adminService.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\actions\\adminAction.ts",["298"],"import { History } from \"history\";\r\n\r\nimport * as types from \"../../../constants/types\";\r\nimport { UserDataI, UserListI } from \"../reducers/authsReducer\";\r\nimport { OrderInfoI, OrderListI } from \"../reducers/ordersReducer\";\r\nimport { ProductItemI } from \"../reducers/productsReducer\";\r\n\r\nclass AdminAction {\r\n\tcreateProductItemRequest = (productForm: ProductItemI, history: History): types.CreateProductItemI => ({\r\n\t\ttype: types.CREATE_PRODUCT_ITEM_REQUEST,\r\n\t\tproductForm,\r\n\t\thistory,\r\n\t});\r\n\tcreateProductItemSucceeded = (productForm: ProductItemI): types.CreateProductItemI => ({\r\n\t\ttype: types.CREATE_PRODUCT_ITEM_SUCCEEDED,\r\n\t\tproductForm,\r\n\t});\r\n\r\n\tupdateProductItemRequest = (\r\n\t\tproductId: string,\r\n\t\tproductForm: ProductItemI,\r\n\t\thistory: History\r\n\t): types.UpdateProductItemI => ({\r\n\t\ttype: types.UPDATE_PRODUCT_ITEM_REQUEST,\r\n\t\tproductId,\r\n\t\tproductForm,\r\n\t\thistory,\r\n\t});\r\n\tupdateProductItemSucceeded = (productForm: ProductItemI): types.UpdateProductItemI => ({\r\n\t\ttype: types.UPDATE_PRODUCT_ITEM_SUCCEEDED,\r\n\t\tproductForm,\r\n\t});\r\n\r\n\tdeleteProductRequest = (productId: string): types.DeleteProductI => ({\r\n\t\ttype: types.DELETE_PRODUCT_REQUEST,\r\n\t\tproductId,\r\n\t});\r\n\tdeleteProductSucceeded = (productId: string): types.DeleteProductI => ({\r\n\t\ttype: types.DELETE_PRODUCT_SUCCEEDED,\r\n\t\tproductId,\r\n\t});\r\n\r\n\tfetchUserListRequest = (): types.FetchUserListI => ({ type: types.FETCH_USER_LIST_REQUEST });\r\n\tfetchUserListSucceeded = (userList: UserListI): types.FetchUserListI => ({\r\n\t\ttype: types.FETCH_USER_LIST_SUCCEEDED,\r\n\t\tuserList,\r\n\t});\r\n\r\n\tgetUserDetailRequest = (userId: string): types.GetUserDetailI => ({ type: types.GET_USER_DETAIL_REQUEST, userId });\r\n\tgetUserDetailSucceeded = (userDetail: UserDataI): types.GetUserDetailI => ({\r\n\t\ttype: types.GET_USER_DETAIL_SUCCEEDED,\r\n\t\tuserDetail,\r\n\t});\r\n\r\n\tupdateUserRequest = (userId: string, userForm: UserDataI, history: History): types.UpdateUserI => ({\r\n\t\ttype: types.UPDATE_USER_REQUEST,\r\n\t\tuserId,\r\n\t\tuserForm,\r\n\t\thistory,\r\n\t});\r\n\tupdateUserSucceeded = (userDetail: UserDataI): types.UpdateUserI => ({\r\n\t\ttype: types.UPDATE_USER_SUCCEEDED,\r\n\t\tuserDetail,\r\n\t});\r\n\r\n\tdeleteUserRequest = (userId: string): types.DeleteUserI => ({ type: types.DELETE_USER_REQUEST, userId });\r\n\tdeleteUserSucceeded = (userId: string): types.DeleteUserI => ({ type: types.DELETE_USER_SUCCEEDED, userId });\r\n\r\n\tfetchOrderListRequest = (): types.FetchOrderListI => ({ type: types.FETCH_ORDER_LIST_REQUEST });\r\n\tfetchOrderListSucceeded = (orderList: OrderListI): types.FetchOrderListI => ({\r\n\t\ttype: types.FETCH_ORDER_LIST_SUCCEEDED,\r\n\t\torderList,\r\n\t});\r\n\r\n\torderDeliverRequest = (orderId: string): types.OrderDeliverI => ({ type: types.ORDER_DELIVER_REQUEST, orderId });\r\n\torderDeliverSucceeded = (): types.OrderDeliverI => ({\r\n\t\ttype: types.ORDER_DELIVER_SUCCEEDED,\r\n\t});\r\n\torderDeliverFailed = (): types.OrderDeliverI => ({\r\n\t\ttype: types.ORDER_DELIVER_FAILED,\r\n\t});\r\n\r\n\torderDeliverRest = (): types.OrderDeliverResetI => ({ type: types.ORDER_DELIVER_RESET });\r\n}\r\n\r\nexport default new AdminAction();\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\UserListPage.tsx",["299"],"import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport { UserDataI } from \"../../stores/redux/reducers/authsReducer\";\r\n\r\nconst UserListPage = (): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { userList, checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchUserListRequest, deleteUserRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst deleteUserHandler = (userId: string | any): void => {\r\n\t\tif (window.confirm(\"Are you sure\")) dispatch(deleteUserRequest(userId));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication && userData && userData.isAdmin) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(fetchUserListRequest());\r\n\t\t}\r\n\t}, [checkAuthentication]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (checkAuthentication && !userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Users</h1>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t\t\t\t\t<td>NAME</td>\r\n\t\t\t\t\t\t\t\t\t<td>EMAIL</td>\r\n\t\t\t\t\t\t\t\t\t<td>ADMIN</td>\r\n\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{userList.map(\r\n\t\t\t\t\t\t\t\t\t(user: UserDataI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={user._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={`mailto:${user.email}`}>{user.email}</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{user.isAdmin ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/admin/user/${user._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"btn-sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-sm\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => deleteUserHandler(user._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserListPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\helpers\\generateErrorSaga.ts",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\EditUserDetailPage.tsx",["300"],"import React, { ChangeEvent, useEffect } from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport FormContainer from \"../../components/layouts/FormContainer\";\r\n\r\nconst YupSchema = Yup.object({\r\n\tpassword: Yup.string(),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst EditUserDetailPage = ({ history, match }: RouteComponentProps | any): JSX.Element => {\r\n\tconst userId: string = match.params.id;\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tadminReducer: { userDetail },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { getUserDetailRequest, updateUserRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication && (!userDetail.name || userDetail._id !== userId)) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(getUserDetailRequest(userId));\r\n\t\t}\r\n\t}, [checkAuthentication, userDetail, userId]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (!userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{\r\n\t\t\t\tname: userDetail.name || \"\",\r\n\t\t\t\temail: userDetail.email || \"\",\r\n\t\t\t\tisAdmin: userDetail.isAdmin,\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tupdateUserRequest(\r\n\t\t\t\t\t\tuserId,\r\n\t\t\t\t\t\t{ name: values.name, email: values.email, isAdmin: values.isAdmin },\r\n\t\t\t\t\t\thistory\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\taction.resetForm();\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link to=\"/admin/users\" className=\"btn btn-light my-3\">\r\n\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<FormContainer>\r\n\t\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Edit User</h1>\r\n\t\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.handleSubmit(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"name\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"email\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"isAdmin\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Is Admin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.values.isAdmin}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"isAdmin\")}></Form.Check>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</FormContainer>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default EditUserDetailPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\stores\\redux\\reducers\\adminReducer.ts",["301"],"import produce from \"immer\";\r\n\r\nimport * as types from \"../../../constants/types\";\r\nimport { UserDataI } from \"./authsReducer\";\r\nimport { OrderItemI, OrderListI } from \"./ordersReducer\";\r\n\r\ntype UserListI = Array<UserDataI>;\r\n\r\ninterface InitialStateI {\r\n\tuserList: UserListI;\r\n\tuserDetail: UserDataI;\r\n\torderList: OrderListI;\r\n\torderDeliverSuccess: boolean;\r\n}\r\n\r\nconst initialState: InitialStateI = {\r\n\tuserList: [],\r\n\tuserDetail: {},\r\n\torderList: [],\r\n\torderDeliverSuccess: false,\r\n};\r\n\r\nconst adminReducer = (state: InitialStateI = initialState, action: any) =>\r\n\tproduce(state, (draft: InitialStateI) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase types.FETCH_USER_LIST_SUCCEEDED: {\r\n\t\t\t\tdraft.userList = action.userList;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.GET_USER_DETAIL_SUCCEEDED: {\r\n\t\t\t\tdraft.userDetail = action.userDetail;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.UPDATE_USER_SUCCEEDED: {\r\n\t\t\t\tdraft.userList = draft.userList.map(\r\n\t\t\t\t\t(user: UserDataI): UserDataI => (user._id === action.userDetail._id ? action.userDetail : user)\r\n\t\t\t\t);\r\n\t\t\t\tdraft.userDetail = {};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.DELETE_USER_SUCCEEDED: {\r\n\t\t\t\tdraft.userList = draft.userList.filter((user: UserDataI): boolean => user._id !== action.userId);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.FETCH_ORDER_LIST_SUCCEEDED: {\r\n\t\t\t\tdraft.orderList = action.orderList;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.ORDER_DELIVER_SUCCEEDED: {\r\n\t\t\t\tdraft.orderDeliverSuccess = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase types.ORDER_DELIVER_FAILED: {\r\n\t\t\t\tdraft.orderDeliverSuccess = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase types.ORDER_DELIVER_RESET: {\r\n\t\t\t\tdraft.orderDeliverSuccess = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\nexport default adminReducer;\r\nexport type { UserListI };\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\ProductListPage.tsx",["302"],"import React, { useEffect } from \"react\";\r\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport { ProductItemI } from \"../../stores/redux/reducers/productsReducer\";\r\nimport productsAction from \"../../stores/redux/actions/productsAction\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport Paginate from \"../../components/utils/Paginate\";\r\n\r\nconst ProductListPage = ({ match }: RouteComponentProps<any>): JSX.Element => {\r\n\tconst pageNumber: number = Number(match.params.pageNumber) || 1;\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tproductsReducer: { productList, page, pages },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchProductListRequest } = productsAction;\r\n\tconst { deleteProductRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst deleteProductHandler = (productId: string | any): void => {\r\n\t\tif (window.confirm(\"Are you sure\")) {\r\n\t\t\tdispatch(deleteProductRequest(productId));\r\n\t\t}\r\n\t};\r\n\r\n\tconst createdProductHandler = (): void => {};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication && (productList.length === 0 || pageNumber !== page)) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(fetchProductListRequest(\"\", pageNumber));\r\n\t\t}\r\n\t}, [checkAuthentication, productList, pageNumber, page]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (checkAuthentication && !userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row className=\"align-items-center\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h1>Products</h1>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"text-right\">\r\n\t\t\t\t\t<LinkContainer to=\"/admin/create-product\">\r\n\t\t\t\t\t\t<Button className=\"my-3\" onClick={createdProductHandler}>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t\t\t\tCreate Product\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>NAME</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>PRICE</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>CATEGORY</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>BRAND</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{productList.map(\r\n\t\t\t\t\t\t\t\t\t\t(productItem: ProductItemI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={productItem._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{productItem._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{productItem.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>${productItem.price}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{productItem.category}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{productItem.brand}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/admin/product/${productItem._id}/edit`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"btn-sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-sm\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => deleteProductHandler(productItem._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t<Paginate pages={pages} page={page} isAdmin={userData.isAdmin} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProductListPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\CreateProductPage.tsx",["303"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport HTTPMethod from \"../../services\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport FormContainer from \"../../components/layouts/FormContainer\";\r\n\r\nconst YupSchema = Yup.object({\r\n\tpassword: Yup.string(),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst CreateProductPage = ({ history, match }: RouteComponentProps | any): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst [uploading, setUploading] = useState<boolean>(false);\r\n\tconst dispatch = useDispatch();\r\n\tconst { createProductItemRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst uploadFileHanlder = async (e: any, props: any) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"image\", file);\r\n\t\tsetUploading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data }: AxiosResponse = await HTTPMethod.uploadImage(formData);\r\n\t\t\tprops.setFieldValue(\"image\", data);\r\n\t\t\tsetUploading(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetUploading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (checkAuthentication && !userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tprice: 0,\r\n\t\t\t\timage: \"\",\r\n\t\t\t\tbrand: \"\",\r\n\t\t\t\tcategory: \"\",\r\n\t\t\t\tcountInStock: 0,\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tcreateProductItemRequest(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: values.name,\r\n\t\t\t\t\t\t\tprice: values.price,\r\n\t\t\t\t\t\t\timage: values.image,\r\n\t\t\t\t\t\t\tbrand: values.brand,\r\n\t\t\t\t\t\t\tcategory: values.category,\r\n\t\t\t\t\t\t\tcountInStock: values.countInStock,\r\n\t\t\t\t\t\t\tdescription: values.description,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thistory\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\taction.resetForm();\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link to=\"/admin/products\" className=\"btn btn-light my-3\">\r\n\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<FormContainer>\r\n\t\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Create Product</h1>\r\n\t\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.handleSubmit(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"name\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"price\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Price</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter price\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.price}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"price\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"image\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Image</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter image url\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"image\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.File\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"image-file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Choose File\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => uploadFileHanlder(e, props)}></Form.File>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{uploading && <Loading />}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"brand\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Brand</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"brand\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"countInStock\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>countInStock</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter countInStock\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.countInStock}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"countInStock\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"category\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Category</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter category\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.category}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"category\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"description\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"description\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</FormContainer>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default CreateProductPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\EditProductPage.tsx",["304","305"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport productsAction from \"../../stores/redux/actions/productsAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport HTTPMethod from \"../../services\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport FormContainer from \"../../components/layouts/FormContainer\";\r\n\r\nconst YupSchema = Yup.object({\r\n\tpassword: Yup.string(),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst EditProductPage = ({ history, match }: RouteComponentProps | any): JSX.Element => {\r\n\tconst productId: string = match.params.id;\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tutilsReducer: { loading, error },\r\n\t\tproductsReducer: { productDetail, page },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst [uploading, setUploading] = useState<boolean>(false);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchProductDetailRequest } = productsAction;\r\n\tconst { updateProductItemRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tconst uploadFileHanlder = async (e: any, props: any) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"image\", file);\r\n\t\tsetUploading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst { data }: AxiosResponse = await HTTPMethod.uploadImage(formData);\r\n\t\t\tprops.setFieldValue(\"image\", data);\r\n\t\t\tsetUploading(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetUploading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication && (!productDetail || productDetail._id !== productId)) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(fetchProductDetailRequest(productId));\r\n\t\t}\r\n\t}, [checkAuthentication, productDetail, productId]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (checkAuthentication && !userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{\r\n\t\t\t\tname: productDetail.name || \"\",\r\n\t\t\t\tprice: productDetail.price || 0,\r\n\t\t\t\timage: productDetail.image || \"\",\r\n\t\t\t\tbrand: productDetail.brand || \"\",\r\n\t\t\t\tcategory: productDetail.category || \"\",\r\n\t\t\t\tcountInStock: productDetail.countInStock || 0,\r\n\t\t\t\tdescription: productDetail.description || \"\",\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={YupSchema}\r\n\t\t\tonSubmit={(values, action) => {\r\n\t\t\t\tdispatch(loadingUI());\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tupdateProductItemRequest(\r\n\t\t\t\t\t\tproductId,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_id: productId,\r\n\t\t\t\t\t\t\tname: values.name,\r\n\t\t\t\t\t\t\tprice: values.price,\r\n\t\t\t\t\t\t\timage: values.image,\r\n\t\t\t\t\t\t\tbrand: values.brand,\r\n\t\t\t\t\t\t\tcategory: values.category,\r\n\t\t\t\t\t\t\tcountInStock: values.countInStock,\r\n\t\t\t\t\t\t\tdescription: values.description,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thistory\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\taction.resetForm();\r\n\t\t\t}}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link to={page ? `/admin/products/${page}` : \"/admin/products\"} className=\"btn btn-light my-3\">\r\n\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<FormContainer>\r\n\t\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Update Product</h1>\r\n\t\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.handleSubmit(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"name\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"price\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Price</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter price\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.price}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"price\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"image\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Image</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter image url\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"image\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.File\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"image-file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Choose File\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => uploadFileHanlder(e, props)}></Form.File>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{uploading && <Loading />}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"brand\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Brand</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"brand\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"countInStock\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>countInStock</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter countInStock\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.countInStock}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"countInStock\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"category\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Category</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter category\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.category}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"category\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"description\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange(\"description\")}></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</FormContainer>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default EditProductPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\pages\\admins\\OrderListPage.tsx",["306","307"],"import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../stores/rootReducer\";\r\nimport adminAction from \"../../stores/redux/actions/adminAction\";\r\nimport utilsAction from \"../../stores/redux/actions/utilsAction\";\r\n\r\nimport Message from \"../../components/utils/Message\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport { UserDataI } from \"../../stores/redux/reducers/authsReducer\";\r\nimport { OrderItemI } from \"../../stores/redux/reducers/ordersReducer\";\r\n\r\nconst OrderListPage = (): JSX.Element => {\r\n\tconst {\r\n\t\tauthsReducer: { checkAuthentication, userData },\r\n\t\tadminReducer: { orderList },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchOrderListRequest } = adminAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkAuthentication && userData && userData.isAdmin) {\r\n\t\t\tdispatch(loadingUI());\r\n\t\t\tdispatch(fetchOrderListRequest());\r\n\t\t}\r\n\t}, [checkAuthentication]);\r\n\r\n\tif (checkAuthentication === false) return <Redirect to=\"/login\" />;\r\n\r\n\tif (checkAuthentication && !userData.isAdmin) return <Redirect to=\"/\" />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Users</h1>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{checkAuthentication === undefined ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t\t\t\t\t<td>USER</td>\r\n\t\t\t\t\t\t\t\t\t<td>DATE</td>\r\n\t\t\t\t\t\t\t\t\t<td>TOTAL</td>\r\n\t\t\t\t\t\t\t\t\t<td>PAID</td>\r\n\t\t\t\t\t\t\t\t\t<td>DELIVERED</td>\r\n\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{orderList.map(\r\n\t\t\t\t\t\t\t\t\t(orderItem: OrderItemI): JSX.Element => (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={orderItem._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{orderItem._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{orderItem.user && orderItem.user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{orderItem.createdAt.substring(0, 10)}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>${orderItem.totalPrice.toFixed(2)}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{orderItem.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tString(orderItem.paidAt).substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{orderItem.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tString(orderItem.deliveredAt).substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${orderItem._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"btn-sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OrderListPage;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\SearchBox\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\utils\\Paginate\\index.tsx",[],"D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\products\\ProductCarousel\\index.tsx",["308"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootReducerI } from \"../../../stores/rootReducer\";\r\nimport productsAction from \"../../../stores/redux/actions/productsAction\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Loading from \"../../utils/Loading\";\r\nimport Message from \"../../utils/Message\";\r\nimport utilsAction from \"../../../stores/redux/actions/utilsAction\";\r\nimport { ProductItemI } from \"../../../stores/redux/reducers/productsReducer\";\r\n\r\nconst ProductCarousel = (): JSX.Element => {\r\n\tconst {\r\n\t\tproductsReducer: { topProductList },\r\n\t\tutilsReducer: { loading, error },\r\n\t} = useSelector((state: RootReducerI) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst { fetchTopProductListRequest } = productsAction;\r\n\tconst { loadingUI } = utilsAction;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadingUI());\r\n\t\tdispatch(fetchTopProductListRequest());\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<Carousel pause=\"hover\" className=\"bg-dark\">\r\n\t\t\t\t\t{topProductList.map(\r\n\t\t\t\t\t\t(productItem: ProductItemI): JSX.Element => (\r\n\t\t\t\t\t\t\t<Carousel.Item key={productItem._id}>\r\n\t\t\t\t\t\t\t\t<Link to={`/product/${productItem._id}`}>\r\n\t\t\t\t\t\t\t\t\t<Image src={productItem.image} alt={productItem.name} fluid />\r\n\t\t\t\t\t\t\t\t\t<Carousel.Caption className=\"caurosel-caption\">\r\n\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{productItem.name} (${productItem.price})\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Carousel>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProductCarousel;\r\n","D:\\Code\\MERN\\e-commerce\\My Project\\client\\src\\components\\layouts\\Meta\\index.tsx",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":43,"column":5,"nodeType":"315","endLine":43,"endColumn":26,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":14,"column":19,"nodeType":"319","messageId":"320","endLine":14,"endColumn":26},{"ruleId":"309","replacedBy":"321"},{"ruleId":"311","replacedBy":"322"},{"ruleId":"317","severity":1,"message":"323","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":26},{"ruleId":"317","severity":1,"message":"324","line":21,"column":40,"nodeType":"319","messageId":"320","endLine":21,"endColumn":48},{"ruleId":"317","severity":1,"message":"324","line":24,"column":40,"nodeType":"319","messageId":"320","endLine":24,"endColumn":48},{"ruleId":"313","severity":1,"message":"325","line":43,"column":5,"nodeType":"315","endLine":43,"endColumn":15,"suggestions":"326"},{"ruleId":"313","severity":1,"message":"327","line":50,"column":5,"nodeType":"315","endLine":50,"endColumn":26,"suggestions":"328"},{"ruleId":"313","severity":1,"message":"329","line":28,"column":5,"nodeType":"315","endLine":28,"endColumn":26,"suggestions":"330"},{"ruleId":"317","severity":1,"message":"331","line":3,"column":31,"nodeType":"319","messageId":"320","endLine":3,"endColumn":36},{"ruleId":"317","severity":1,"message":"332","line":3,"column":38,"nodeType":"319","messageId":"320","endLine":3,"endColumn":42},{"ruleId":"313","severity":1,"message":"333","line":32,"column":5,"nodeType":"315","endLine":32,"endColumn":26,"suggestions":"334"},{"ruleId":"313","severity":1,"message":"335","line":46,"column":5,"nodeType":"315","endLine":46,"endColumn":22,"suggestions":"336"},{"ruleId":"317","severity":1,"message":"318","line":20,"column":26,"nodeType":"319","messageId":"320","endLine":20,"endColumn":33},{"ruleId":"317","severity":1,"message":"337","line":23,"column":10,"nodeType":"319","messageId":"320","endLine":23,"endColumn":29},{"ruleId":"313","severity":1,"message":"338","line":45,"column":5,"nodeType":"315","endLine":45,"endColumn":35,"suggestions":"339"},{"ruleId":"313","severity":1,"message":"340","line":50,"column":5,"nodeType":"315","endLine":50,"endColumn":7,"suggestions":"341"},{"ruleId":"313","severity":1,"message":"342","line":63,"column":5,"nodeType":"315","endLine":63,"endColumn":15,"suggestions":"343"},{"ruleId":"317","severity":1,"message":"344","line":45,"column":11,"nodeType":"319","messageId":"320","endLine":45,"endColumn":15},{"ruleId":"313","severity":1,"message":"345","line":68,"column":5,"nodeType":"315","endLine":68,"endColumn":84,"suggestions":"346"},{"ruleId":"317","severity":1,"message":"344","line":101,"column":11,"nodeType":"319","messageId":"320","endLine":101,"endColumn":15},{"ruleId":"317","severity":1,"message":"347","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":20},{"ruleId":"313","severity":1,"message":"348","line":33,"column":5,"nodeType":"315","endLine":33,"endColumn":26,"suggestions":"349"},{"ruleId":"313","severity":1,"message":"350","line":38,"column":5,"nodeType":"315","endLine":38,"endColumn":46,"suggestions":"351"},{"ruleId":"317","severity":1,"message":"352","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":20},{"ruleId":"313","severity":1,"message":"329","line":42,"column":5,"nodeType":"315","endLine":42,"endColumn":57,"suggestions":"353"},{"ruleId":"317","severity":1,"message":"354","line":1,"column":30,"nodeType":"319","messageId":"320","endLine":1,"endColumn":39},{"ruleId":"317","severity":1,"message":"355","line":1,"column":30,"nodeType":"319","messageId":"320","endLine":1,"endColumn":39},{"ruleId":"313","severity":1,"message":"335","line":60,"column":5,"nodeType":"315","endLine":60,"endColumn":52,"suggestions":"356"},{"ruleId":"317","severity":1,"message":"357","line":13,"column":10,"nodeType":"319","messageId":"320","endLine":13,"endColumn":19},{"ruleId":"313","severity":1,"message":"358","line":31,"column":5,"nodeType":"315","endLine":31,"endColumn":26,"suggestions":"359"},{"ruleId":"313","severity":1,"message":"360","line":28,"column":5,"nodeType":"315","endLine":28,"endColumn":7,"suggestions":"361"},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticationRequest' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["364"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["362"],["363"],"'StringifyOptions' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkAuthentication', 'dispatch', 'getUserDataRequest', and 'history'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'dispatch', 'getOrderUserRequest', and 'loadingUI'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchProductListRequest', and 'loadingUI'. Either include them or remove the dependency array.",["367"],"'Image' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'cartList.length', 'dispatch', 'fetchCartListRequest', and 'loadingUI'. Either include them or remove the dependency array.",["368"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchProductDetailRequest', and 'loadingUI'. Either include them or remove the dependency array.",["369"],"'savingPaymentMethod' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orderInfo?._id'. Either include it or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchCartListRequest', and 'loadingUI'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setPaymentPrice'. Either include them or remove the dependency array.",["372"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getOrderDetailRequest', 'loadingUI', 'orderDeliverRest', and 'orderPayRest'. Either include them or remove the dependency array.",["373"],"'OrderInfoI' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchUserListRequest', 'loadingUI', and 'userData'. Either include them or remove the dependency array.",["374"],"React Hook useEffect has missing dependencies: 'dispatch', 'getUserDetailRequest', and 'loadingUI'. Either include them or remove the dependency array.",["375"],"'OrderItemI' is defined but never used.",["376"],"'useEffect' is defined but never used.","'FormEvent' is defined but never used.",["377"],"'UserDataI' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchOrderListRequest', 'loadingUI', and 'userData'. Either include them or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchTopProductListRequest', and 'loadingUI'. Either include them or remove the dependency array.",["379"],"no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},"Update the dependencies array to be: [checkAuthentication, checkAuthenticationRequest, dispatch]",{"range":"412","text":"413"},"Update the dependencies array to be: [checkAuthentication, dispatch, getUserDataRequest, history, userData]",{"range":"414","text":"415"},"Update the dependencies array to be: [checkAuthentication, dispatch, getOrderUserRequest, loadingUI]",{"range":"416","text":"417"},"Update the dependencies array to be: [dispatch, fetchProductListRequest, keyword, loadingUI, pageNumber]",{"range":"418","text":"419"},"Update the dependencies array to be: [cartList.length, checkAuthentication, dispatch, fetchCartListRequest, loadingUI]",{"range":"420","text":"421"},"Update the dependencies array to be: [dispatch, fetchProductDetailRequest, loadingUI, match.params.id]",{"range":"422","text":"423"},"Update the dependencies array to be: [orderCreatedSuccess, history, orderInfo?._id]",{"range":"424","text":"425"},"Update the dependencies array to be: [dispatch, fetchCartListRequest, loadingUI]",{"range":"426","text":"427"},"Update the dependencies array to be: [cartList, dispatch, setPaymentPrice]",{"range":"428","text":"429"},"Update the dependencies array to be: [checkAuthentication, orderInfo, orderId, orderPaySuccess, orderDeliverSuccess, dispatch, loadingUI, getOrderDetailRequest, orderPayRest, orderDeliverRest]",{"range":"430","text":"431"},"Update the dependencies array to be: [checkAuthentication, dispatch, fetchUserListRequest, loadingUI, userData]",{"range":"432","text":"433"},"Update the dependencies array to be: [checkAuthentication, dispatch, getUserDetailRequest, loadingUI, userDetail, userId]",{"range":"434","text":"435"},"Update the dependencies array to be: [checkAuthentication, productList, pageNumber, page, dispatch, loadingUI, fetchProductListRequest]",{"range":"436","text":"437"},"Update the dependencies array to be: [checkAuthentication, dispatch, fetchProductDetailRequest, loadingUI, productDetail, productId]",{"range":"438","text":"439"},"Update the dependencies array to be: [checkAuthentication, dispatch, fetchOrderListRequest, loadingUI, userData]",{"range":"440","text":"441"},"Update the dependencies array to be: [dispatch, fetchTopProductListRequest, loadingUI]",{"range":"442","text":"443"},[1674,1695],"[checkAuthentication, checkAuthenticationRequest, dispatch]",[1604,1614],"[checkAuthentication, dispatch, getUserDataRequest, history, userData]",[1752,1773],"[checkAuthentication, dispatch, getOrderUserRequest, loadingUI]",[1191,1212],"[dispatch, fetchProductListRequest, keyword, loadingUI, pageNumber]",[1279,1300],"[cartList.length, checkAuthentication, dispatch, fetchCartListRequest, loadingUI]",[1889,1906],"[dispatch, fetchProductDetailRequest, loadingUI, match.params.id]",[1646,1676],"[orderCreatedSuccess, history, orderInfo?._id]",[1769,1771],"[dispatch, fetchCartListRequest, loadingUI]",[2317,2327],"[cartList, dispatch, setPaymentPrice]",[2587,2666],"[checkAuthentication, orderInfo, orderId, orderPaySuccess, orderDeliverSuccess, dispatch, loadingUI, getOrderDetailRequest, orderPayRest, orderDeliverRest]",[1276,1297],"[checkAuthentication, dispatch, fetchUserListRequest, loadingUI, userData]",[1474,1515],"[checkAuthentication, dispatch, getUserDetailRequest, loadingUI, userDetail, userId]",[1734,1786],"[checkAuthentication, productList, pageNumber, page, dispatch, loadingUI, fetchProductListRequest]",[2202,2249],"[checkAuthentication, dispatch, fetchProductDetailRequest, loadingUI, productDetail, productId]",[1210,1231],"[checkAuthentication, dispatch, fetchOrderListRequest, loadingUI, userData]",[1008,1010],"[dispatch, fetchTopProductListRequest, loadingUI]"]